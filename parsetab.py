
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ENQUANTO IMPRIMIR INTEIRO LEIA LPAREN NUMERO OP_DIV OP_IGUAL OP_MULT OP_SOMA OP_SUB PARA REAL RPAREN SE SENAO SENAOSE TEXTO TEXTONORMAL VARIAVEL\n    programa : declaracao '.' \n    \n    declaracao : tipo VARIAVEL OP_IGUAL expressao\n               | tipo VARIAVEL\n    \n    tipo : INTEIRO\n         | REAL\n         | TEXTO\n    \n    expressao : expressao OP_SOMA termo\n              | expressao OP_SUB termo\n              | termo\n    \n    termo : termo OP_MULT fator\n          | termo OP_DIV fator\n          | fator\n    \n    fator : NUMERO\n          | VARIAVEL\n          | LPAREN expressao RPAREN\n    "
    
_lr_action_items = {'INTEIRO':([0,],[4,]),'REAL':([0,],[5,]),'TEXTO':([0,],[6,]),'$end':([1,7,],[0,-1,]),'.':([2,8,10,11,12,13,14,21,22,23,24,25,],[7,-3,-14,-2,-9,-12,-13,-7,-8,-10,-11,-15,]),'VARIAVEL':([3,4,5,6,9,15,16,17,18,19,],[8,-4,-5,-6,10,10,10,10,10,10,]),'OP_IGUAL':([8,],[9,]),'NUMERO':([9,15,16,17,18,19,],[14,14,14,14,14,14,]),'LPAREN':([9,15,16,17,18,19,],[15,15,15,15,15,15,]),'OP_MULT':([10,12,13,14,21,22,23,24,25,],[-14,18,-12,-13,18,18,-10,-11,-15,]),'OP_DIV':([10,12,13,14,21,22,23,24,25,],[-14,19,-12,-13,19,19,-10,-11,-15,]),'OP_SOMA':([10,11,12,13,14,20,21,22,23,24,25,],[-14,16,-9,-12,-13,16,-7,-8,-10,-11,-15,]),'OP_SUB':([10,11,12,13,14,20,21,22,23,24,25,],[-14,17,-9,-12,-13,17,-7,-8,-10,-11,-15,]),'RPAREN':([10,12,13,14,20,21,22,23,24,25,],[-14,-9,-12,-13,25,-7,-8,-10,-11,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,],[2,]),'tipo':([0,],[3,]),'expressao':([9,15,],[11,20,]),'termo':([9,15,16,17,],[12,12,21,22,]),'fator':([9,15,16,17,18,19,],[13,13,13,13,23,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao .','programa',2,'p_programa','parse.py',7),
  ('declaracao -> tipo VARIAVEL OP_IGUAL expressao','declaracao',4,'p_declaracao','parse.py',14),
  ('declaracao -> tipo VARIAVEL','declaracao',2,'p_declaracao','parse.py',15),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','parse.py',22),
  ('tipo -> REAL','tipo',1,'p_tipo','parse.py',23),
  ('tipo -> TEXTO','tipo',1,'p_tipo','parse.py',24),
  ('expressao -> expressao OP_SOMA termo','expressao',3,'p_expressao','parse.py',31),
  ('expressao -> expressao OP_SUB termo','expressao',3,'p_expressao','parse.py',32),
  ('expressao -> termo','expressao',1,'p_expressao','parse.py',33),
  ('termo -> termo OP_MULT fator','termo',3,'p_termo','parse.py',40),
  ('termo -> termo OP_DIV fator','termo',3,'p_termo','parse.py',41),
  ('termo -> fator','termo',1,'p_termo','parse.py',42),
  ('fator -> NUMERO','fator',1,'p_fator','parse.py',49),
  ('fator -> VARIAVEL','fator',1,'p_fator','parse.py',50),
  ('fator -> LPAREN expressao RPAREN','fator',3,'p_fator','parse.py',51),
]
